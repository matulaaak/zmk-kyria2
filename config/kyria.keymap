/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Encoder resolutions
&left_encoder   { resolution = <1>; };
&right_encoder  { resolution = <1>; };

// None/Trans
#define _____ &none
#define t____ &trans

// Layers
#define DEFAULT 0
#define NUM 1
#define SYM 2
#define FUN 3
#define NAV 4
#define MSE 5
#define MED 6

/ {
behaviors {
	hmi: homerow_mods_index {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS_INDEX";
		#binding-cells = <2>;
		tapping-term-ms = <180>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
		};
	hmr: homerow_mods_ring {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS_RING";
		#binding-cells = <2>;
		tapping-term-ms = <210>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
		};
	hml: homerow_mods_long {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS_LONG";
		#binding-cells = <2>;
		tapping-term-ms = <300>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
		};
    };

	keymap {
compatible = "zmk,keymap";
default_layer {
		bindings = <
_____ 	&kp Q 		&kp W 		&kp F 		&kp P 		&kp B 														&kp J 	&kp L 		&kp U 			&kp Y 		&hmr DQT SQT 	_____
_____ 	&hmr LGUI A &hmr LALT R &hmi LCTRL S &hmi LSHFT T &kp G 													&kp M 	&hmi RSHFT N &hmi RCTRL E 	&hmr LALT I &hmr RGUI O 	_____
_____	&kp Z 		&kp X 		&kp C 		&kp D 		&kp V 	_____ 			_____ 			_____ 		_____ 	&kp K 	&kp H 		&hmi EXCL COMMA &hmr QMARK DOT &hmr COLON SEMI 	_____
								_____ 	&CAPS 	&lt MSE TAB 	&lt NAV SPACE 	&lt MED RET 	&lt SYM DEL &lt NUM BSPC &lt FUN ESC _____ _____
		>;
		sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp LA(LEFT) LA(RIGHT)>;
};
num_layer {
		bindings = <
_____ 	&kp GRAVE	 		&kp N7 	&kp N8 	&kp N9 		&kp TILDE												&trans 	&trans 		&trans 		&trans 		&reset 		_____
_____ 	&kp NON_US_HASH 	&kp N4 	&kp N5 	&kp N6 		&kp ___													&trans 	&kp RSHFT 	&kp RCTRL 	&kp LALT 	&kp RGUI 	_____
_____ 	&kp PRCNT 			&kp N1 	&kp N2 	&kp N3 		&kp ___  	_____ 		_____ 			_____ 	_____ 	&trans 	&trans 		&trans 		&trans 		&trans 		_____
									&trans 	&kp DOT 	&kp N0 		&kp MINUS 	&kp UNDER		&trans 	&trans	&trans 	&trans 		&trans
		>;
		sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp LA(LEFT) LA(RIGHT)>;
	};
sym_layer {
		bindings = <
_____ 	&kp AMPS 	&kp PLUS 	&kp STAR 	&kp LBKT 	&kp RBKT												&trans 		&trans 		&trans 	   &trans 		&trans 		  _____
_____ 	&kp DLLR 	&kp MINUS 	&kp FSLH	&kp LBRC 	&kp RBRC												&trans 		&kp RSHFT 	&kp RCTRL 	&kp LALT 	&kp RGUI      _____
_____ 	&kp AT 		&kp CARET  	&kp BSLH 	&kp LT  	&kp GT		_____ 		_____			_____ 	_____ 	&trans 		&trans 		&trans 	   &trans 		&trans 		  _____
								&trans		&kp EQUAL	&kp ___ 	&kp LPAR 	&kp RPAR		&trans 	&trans 	&trans 		&trans 		&trans
		>;
		sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp LA(LEFT) LA(RIGHT)>;
	};
fun_layer {
		bindings = <
_____ 	&kp F12 	&kp F7 	&kp F8 	&kp F9 	&trans 											&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  _____
_____ 	&kp F11 	&kp F4 	&kp F5 	&kp F6 	&trans 											&trans       &kp RSHFT    &kp RCTRL    &kp LALT     &kp RGUI      _____
_____ 	&kp F10 	&kp F1 	&kp F2 	&kp F3 	&trans 	_____ 	_____			_____ 	_____ 	&trans 		 &trans 	  &trans 	   &trans 		&trans 		  _____
		                  	&trans 	&trans 	&trans 	&trans 	&trans			&trans 	&trans 	&trans 		 &bt BT_CLR	  &trans
		>;
		sensor-bindings = <&inc_dec_kp C_BRI_DN C_BRI_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
	};
nav_layer {
		bindings = < 
_____ 	&trans     &trans     &trans     &trans     &trans 												&trans 	&kp LC(LEFT) 	&kp LC(DOWN) 	&kp LC(UP) 	&kp LC(RIGHT) 	_____
_____ 	&kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans 												&trans 	&kp LEFT 		&kp DOWN 		&kp UP 		&kp RIGHT 		_____
_____ 	&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(D) 	&kp LC(V) _____ 	_____ 			_____ 	_____ 	&trans 	&kp LA(LEFT) 	&kp LA(DOWN) 	&kp LA(UP) 	&kp LA(RIGHT) 	_____
		                       &trans    &trans     &trans    &trans 	&trans			&trans 	&trans 	&trans 	&trans 			&trans
		>;
		sensor-bindings = <&inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_VOL_DN C_VOL_UP>;
	};
mse_layer {
		bindings = <
_____   &trans     &trans    &trans     &trans     &trans 											&trans 	&trans     &trans     &trans     &trans   _____
_____   &kp LGUI   &kp LALT  &kp LCTRL  &kp LSHFT  &trans 											&trans 	&kp RSHFT  &kp RCTRL  &kp LALT   &kp RGUI _____
_____   &trans     &trans    &trans     &trans     &trans 	_____ 	_____ 			_____ 	_____ 	&trans 	&trans 	   &trans     &trans     &trans   _____
							 &trans		&trans 		&trans 	&trans 	&trans 			&trans 	&trans 	&trans 	&trans 	   &trans
		>;
		sensor-bindings = <&inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_VOL_DN C_VOL_UP>;
	};
med_layer {
	bindings = <
_____ 	&trans     &trans     &trans     &trans     &trans 														&trans 	&trans   	&trans		&trans   	&trans 	_____
_____ 	&kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans 														&trans 	&kp C_PREV 	&kp C_PP    &kp C_NEXT 	&trans 	_____
_____ 	&trans     &trans     &trans     &trans     &trans 	_____ 	_____ 			_____ 			_____ 		&trans 	&trans     	&trans      &trans 		&trans 	_____
									&trans 	&trans 	&trans 	&trans 	&trans 			&kp K_STOP2		&kp C_PP 	&trans 	&trans 		&kp K_MUTE
		>;
		sensor-bindings = <&inc_dec_kp C_RW C_FF &inc_dec_kp C_VOL_DN C_VOL_UP>;
	};
	};
	};
